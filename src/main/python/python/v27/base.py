#!/usr/bin/env python
#
# [SNIPPET_NAME: AppIndicator Script]
# [SNIPPET_DESCRIPTION: This script is generated by Appinpy java library]
# [SNIPPET_AUTHOR: Piotr Jasiowka <www.jasiowka.pl>]
# [SNIPPET_LICENSE: GPL]

import pygtk
pygtk.require('2.0')
import gtk
import appindicator
import os
import xmlrpclib

class AppIndicatorExample:
    def __init__(self):
        self.ind = appindicator.Indicator("example-simple-client", "indicator-messages", appindicator.CATEGORY_APPLICATION_STATUS)
        self.ind.set_status(appindicator.STATUS_ACTIVE)
        self.ind.set_attention_icon("indicator-messages-new")
        self.ind.set_icon_theme_path(os.path.dirname(os.path.realpath(__file__)))
        self.ind.set_icon("icon")

        self.rpcClient = xmlrpclib.Server('http://localhost:8000')

        {--menu--}

        image = gtk.ImageMenuItem(gtk.STOCK_QUIT)
        image.connect("activate", self.quit)
        image.show()
        {--mainMenuId--}.append(image)

        self.ind.set_menu({--mainMenuId--})

    def quit(self, widget, data=None):
        gtk.main_quit()
    {--actions--}

def main():
    gtk.main()
    return 0

if __name__ == "__main__":
    indicator = AppIndicatorExample()
    main()

